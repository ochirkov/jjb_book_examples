timestamps {
    node ('master') {
        ws('/tmp/Test_Pipeline/') {

            try {

                withEnv(["DIR=jjb-repo", "CMD=tox -e"]) {

                    stage 'Checkout Jenkins Job Builder Repo'

                    dir("${DIR}") {
                        git url: 'https://github.com/openstack-infra/jenkins-job-builder.git'
                    }


                    parallel '27': {
                        stage('Python 2.7 Unit Tests') {
                            println 'Run python 2.7 tests'
                            dir("${DIR}") {
                                sh("${CMD} py27")
                            }
                        }
                    }, '34': {
                        stage('Python 3.4 Unit Tests') {
                            println 'Run python 3.4 tests'
                            dir("${DIR}") {
                                sh("${CMD} py34")
                            }
                        }
                    }, '35': {
                        stage('Python 3.5 Unit Tests') {
                            println 'Run python 3.5 tests'
                            dir("${DIR}") {
                                sh("${CMD} py35")
                            }
                        }
                    }, 'docs': {
                        stage ('Docs syntax check') {
                            println 'Run python linter'
                            dir("${DIR}") {
                                sh("${CMD} docs-linkcheck")
                            }
                        }
                    }

                    stage 'Generating docs'

                    println 'Starting generate docs'

                    dir("${DIR}") {
                        sh("${CMD} docs")
                        archive 'doc/build/html/index.html'
                    }

                    stage 'Sanity check'

                    if (env.PUBLISH_DOCS == 'true') {
                        input "Proceeding with deployment?"

                    }

                    stage 'Deploy'

                    if (env.PUBLISH_DOCS == 'true') {
                        dir("${DIR}") {
                            echo 'Deploying documentation artifact'
                            sh("cp doc/build/html/index.html /usr/share/nginx/html/")
                        }
                    }

                    echo 'One way or another, I have finished'
                }
            }

            catch (exc) {
                echo 'I failed :('
                throw exc
            }

            finally {
                deleteDir()
                slackSend channel: '#ops-channel', color: '#f44336', message: 'Pipeline failed', teamDomain: '<domain>', token: '<token>'
            }
        }
    }
}